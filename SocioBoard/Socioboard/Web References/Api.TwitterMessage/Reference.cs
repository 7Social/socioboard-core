//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace Socioboard.Api.TwitterMessage {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TwitterMessageSoap", Namespace="http://tempuri.org/")]
    public partial class TwitterMessage : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetTwitterMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTwitterMessages1OperationCompleted;
        
        private System.Threading.SendOrPostCallback getUnreadMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAlltwtMessagesOfUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAlltwtMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAlltwtMessages1OperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllTwitterUsertweetOfUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllTwitterRetweetOfUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllTwitterMentionsOfUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTwitterMessageByMessageIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TwitterMessage() {
            this.Url = "http://localhost:6361/Services/TwitterMessage.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetTwitterMessagesCompletedEventHandler GetTwitterMessagesCompleted;
        
        /// <remarks/>
        public event GetTwitterMessages1CompletedEventHandler GetTwitterMessages1Completed;
        
        /// <remarks/>
        public event getUnreadMessagesCompletedEventHandler getUnreadMessagesCompleted;
        
        /// <remarks/>
        public event getAlltwtMessagesOfUserCompletedEventHandler getAlltwtMessagesOfUserCompleted;
        
        /// <remarks/>
        public event getAlltwtMessagesCompletedEventHandler getAlltwtMessagesCompleted;
        
        /// <remarks/>
        public event getAlltwtMessages1CompletedEventHandler getAlltwtMessages1Completed;
        
        /// <remarks/>
        public event getAllTwitterUsertweetOfUsersCompletedEventHandler getAllTwitterUsertweetOfUsersCompleted;
        
        /// <remarks/>
        public event getAllTwitterRetweetOfUsersCompletedEventHandler getAllTwitterRetweetOfUsersCompleted;
        
        /// <remarks/>
        public event getAllTwitterMentionsOfUsersCompletedEventHandler getAllTwitterMentionsOfUsersCompleted;
        
        /// <remarks/>
        public event GetTwitterMessageByMessageIdCompletedEventHandler GetTwitterMessageByMessageIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTwitterMessages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTwitterMessages(string TwitterId, string Userid) {
            object[] results = this.Invoke("GetTwitterMessages", new object[] {
                        TwitterId,
                        Userid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTwitterMessagesAsync(string TwitterId, string Userid) {
            this.GetTwitterMessagesAsync(TwitterId, Userid, null);
        }
        
        /// <remarks/>
        public void GetTwitterMessagesAsync(string TwitterId, string Userid, object userState) {
            if ((this.GetTwitterMessagesOperationCompleted == null)) {
                this.GetTwitterMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTwitterMessagesOperationCompleted);
            }
            this.InvokeAsync("GetTwitterMessages", new object[] {
                        TwitterId,
                        Userid}, this.GetTwitterMessagesOperationCompleted, userState);
        }
        
        private void OnGetTwitterMessagesOperationCompleted(object arg) {
            if ((this.GetTwitterMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTwitterMessagesCompleted(this, new GetTwitterMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTwitterMessages1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTwitterMessages1(string TwitterId, string Userid, int count) {
            object[] results = this.Invoke("GetTwitterMessages1", new object[] {
                        TwitterId,
                        Userid,
                        count});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTwitterMessages1Async(string TwitterId, string Userid, int count) {
            this.GetTwitterMessages1Async(TwitterId, Userid, count, null);
        }
        
        /// <remarks/>
        public void GetTwitterMessages1Async(string TwitterId, string Userid, int count, object userState) {
            if ((this.GetTwitterMessages1OperationCompleted == null)) {
                this.GetTwitterMessages1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTwitterMessages1OperationCompleted);
            }
            this.InvokeAsync("GetTwitterMessages1", new object[] {
                        TwitterId,
                        Userid,
                        count}, this.GetTwitterMessages1OperationCompleted, userState);
        }
        
        private void OnGetTwitterMessages1OperationCompleted(object arg) {
            if ((this.GetTwitterMessages1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTwitterMessages1Completed(this, new GetTwitterMessages1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUnreadMessages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUnreadMessages(string Profileid) {
            object[] results = this.Invoke("getUnreadMessages", new object[] {
                        Profileid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUnreadMessagesAsync(string Profileid) {
            this.getUnreadMessagesAsync(Profileid, null);
        }
        
        /// <remarks/>
        public void getUnreadMessagesAsync(string Profileid, object userState) {
            if ((this.getUnreadMessagesOperationCompleted == null)) {
                this.getUnreadMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUnreadMessagesOperationCompleted);
            }
            this.InvokeAsync("getUnreadMessages", new object[] {
                        Profileid}, this.getUnreadMessagesOperationCompleted, userState);
        }
        
        private void OngetUnreadMessagesOperationCompleted(object arg) {
            if ((this.getUnreadMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUnreadMessagesCompleted(this, new getUnreadMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAlltwtMessagesOfUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAlltwtMessagesOfUser(string Profileid) {
            object[] results = this.Invoke("getAlltwtMessagesOfUser", new object[] {
                        Profileid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAlltwtMessagesOfUserAsync(string Profileid) {
            this.getAlltwtMessagesOfUserAsync(Profileid, null);
        }
        
        /// <remarks/>
        public void getAlltwtMessagesOfUserAsync(string Profileid, object userState) {
            if ((this.getAlltwtMessagesOfUserOperationCompleted == null)) {
                this.getAlltwtMessagesOfUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAlltwtMessagesOfUserOperationCompleted);
            }
            this.InvokeAsync("getAlltwtMessagesOfUser", new object[] {
                        Profileid}, this.getAlltwtMessagesOfUserOperationCompleted, userState);
        }
        
        private void OngetAlltwtMessagesOfUserOperationCompleted(object arg) {
            if ((this.getAlltwtMessagesOfUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAlltwtMessagesOfUserCompleted(this, new getAlltwtMessagesOfUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAlltwtMessages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAlltwtMessages(string Profileid) {
            object[] results = this.Invoke("getAlltwtMessages", new object[] {
                        Profileid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAlltwtMessagesAsync(string Profileid) {
            this.getAlltwtMessagesAsync(Profileid, null);
        }
        
        /// <remarks/>
        public void getAlltwtMessagesAsync(string Profileid, object userState) {
            if ((this.getAlltwtMessagesOperationCompleted == null)) {
                this.getAlltwtMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAlltwtMessagesOperationCompleted);
            }
            this.InvokeAsync("getAlltwtMessages", new object[] {
                        Profileid}, this.getAlltwtMessagesOperationCompleted, userState);
        }
        
        private void OngetAlltwtMessagesOperationCompleted(object arg) {
            if ((this.getAlltwtMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAlltwtMessagesCompleted(this, new getAlltwtMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAlltwtMessages1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAlltwtMessages1(string Profileid, string userid) {
            object[] results = this.Invoke("getAlltwtMessages1", new object[] {
                        Profileid,
                        userid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAlltwtMessages1Async(string Profileid, string userid) {
            this.getAlltwtMessages1Async(Profileid, userid, null);
        }
        
        /// <remarks/>
        public void getAlltwtMessages1Async(string Profileid, string userid, object userState) {
            if ((this.getAlltwtMessages1OperationCompleted == null)) {
                this.getAlltwtMessages1OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAlltwtMessages1OperationCompleted);
            }
            this.InvokeAsync("getAlltwtMessages1", new object[] {
                        Profileid,
                        userid}, this.getAlltwtMessages1OperationCompleted, userState);
        }
        
        private void OngetAlltwtMessages1OperationCompleted(object arg) {
            if ((this.getAlltwtMessages1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAlltwtMessages1Completed(this, new getAlltwtMessages1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllTwitterUsertweetOfUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAllTwitterUsertweetOfUsers(string UserId, string ProfileId) {
            object[] results = this.Invoke("getAllTwitterUsertweetOfUsers", new object[] {
                        UserId,
                        ProfileId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllTwitterUsertweetOfUsersAsync(string UserId, string ProfileId) {
            this.getAllTwitterUsertweetOfUsersAsync(UserId, ProfileId, null);
        }
        
        /// <remarks/>
        public void getAllTwitterUsertweetOfUsersAsync(string UserId, string ProfileId, object userState) {
            if ((this.getAllTwitterUsertweetOfUsersOperationCompleted == null)) {
                this.getAllTwitterUsertweetOfUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllTwitterUsertweetOfUsersOperationCompleted);
            }
            this.InvokeAsync("getAllTwitterUsertweetOfUsers", new object[] {
                        UserId,
                        ProfileId}, this.getAllTwitterUsertweetOfUsersOperationCompleted, userState);
        }
        
        private void OngetAllTwitterUsertweetOfUsersOperationCompleted(object arg) {
            if ((this.getAllTwitterUsertweetOfUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllTwitterUsertweetOfUsersCompleted(this, new getAllTwitterUsertweetOfUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllTwitterRetweetOfUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAllTwitterRetweetOfUsers(string UserId, string ProfileId) {
            object[] results = this.Invoke("getAllTwitterRetweetOfUsers", new object[] {
                        UserId,
                        ProfileId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllTwitterRetweetOfUsersAsync(string UserId, string ProfileId) {
            this.getAllTwitterRetweetOfUsersAsync(UserId, ProfileId, null);
        }
        
        /// <remarks/>
        public void getAllTwitterRetweetOfUsersAsync(string UserId, string ProfileId, object userState) {
            if ((this.getAllTwitterRetweetOfUsersOperationCompleted == null)) {
                this.getAllTwitterRetweetOfUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllTwitterRetweetOfUsersOperationCompleted);
            }
            this.InvokeAsync("getAllTwitterRetweetOfUsers", new object[] {
                        UserId,
                        ProfileId}, this.getAllTwitterRetweetOfUsersOperationCompleted, userState);
        }
        
        private void OngetAllTwitterRetweetOfUsersOperationCompleted(object arg) {
            if ((this.getAllTwitterRetweetOfUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllTwitterRetweetOfUsersCompleted(this, new getAllTwitterRetweetOfUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllTwitterMentionsOfUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAllTwitterMentionsOfUsers(string UserId, string ProfileId) {
            object[] results = this.Invoke("getAllTwitterMentionsOfUsers", new object[] {
                        UserId,
                        ProfileId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllTwitterMentionsOfUsersAsync(string UserId, string ProfileId) {
            this.getAllTwitterMentionsOfUsersAsync(UserId, ProfileId, null);
        }
        
        /// <remarks/>
        public void getAllTwitterMentionsOfUsersAsync(string UserId, string ProfileId, object userState) {
            if ((this.getAllTwitterMentionsOfUsersOperationCompleted == null)) {
                this.getAllTwitterMentionsOfUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllTwitterMentionsOfUsersOperationCompleted);
            }
            this.InvokeAsync("getAllTwitterMentionsOfUsers", new object[] {
                        UserId,
                        ProfileId}, this.getAllTwitterMentionsOfUsersOperationCompleted, userState);
        }
        
        private void OngetAllTwitterMentionsOfUsersOperationCompleted(object arg) {
            if ((this.getAllTwitterMentionsOfUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllTwitterMentionsOfUsersCompleted(this, new getAllTwitterMentionsOfUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTwitterMessageByMessageId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTwitterMessageByMessageId(string userid, string Msgid) {
            object[] results = this.Invoke("GetTwitterMessageByMessageId", new object[] {
                        userid,
                        Msgid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTwitterMessageByMessageIdAsync(string userid, string Msgid) {
            this.GetTwitterMessageByMessageIdAsync(userid, Msgid, null);
        }
        
        /// <remarks/>
        public void GetTwitterMessageByMessageIdAsync(string userid, string Msgid, object userState) {
            if ((this.GetTwitterMessageByMessageIdOperationCompleted == null)) {
                this.GetTwitterMessageByMessageIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTwitterMessageByMessageIdOperationCompleted);
            }
            this.InvokeAsync("GetTwitterMessageByMessageId", new object[] {
                        userid,
                        Msgid}, this.GetTwitterMessageByMessageIdOperationCompleted, userState);
        }
        
        private void OnGetTwitterMessageByMessageIdOperationCompleted(object arg) {
            if ((this.GetTwitterMessageByMessageIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTwitterMessageByMessageIdCompleted(this, new GetTwitterMessageByMessageIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTwitterMessagesCompletedEventHandler(object sender, GetTwitterMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTwitterMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTwitterMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTwitterMessages1CompletedEventHandler(object sender, GetTwitterMessages1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTwitterMessages1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTwitterMessages1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getUnreadMessagesCompletedEventHandler(object sender, getUnreadMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUnreadMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUnreadMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getAlltwtMessagesOfUserCompletedEventHandler(object sender, getAlltwtMessagesOfUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAlltwtMessagesOfUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAlltwtMessagesOfUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getAlltwtMessagesCompletedEventHandler(object sender, getAlltwtMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAlltwtMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAlltwtMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getAlltwtMessages1CompletedEventHandler(object sender, getAlltwtMessages1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAlltwtMessages1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAlltwtMessages1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getAllTwitterUsertweetOfUsersCompletedEventHandler(object sender, getAllTwitterUsertweetOfUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllTwitterUsertweetOfUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllTwitterUsertweetOfUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getAllTwitterRetweetOfUsersCompletedEventHandler(object sender, getAllTwitterRetweetOfUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllTwitterRetweetOfUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllTwitterRetweetOfUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getAllTwitterMentionsOfUsersCompletedEventHandler(object sender, getAllTwitterMentionsOfUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllTwitterMentionsOfUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllTwitterMentionsOfUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTwitterMessageByMessageIdCompletedEventHandler(object sender, GetTwitterMessageByMessageIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTwitterMessageByMessageIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTwitterMessageByMessageIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591