//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18063.
// 
#pragma warning disable 1591

namespace Socioboard.Api.User {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UserSoap", Namespace="http://tempuri.org/")]
    public partial class User : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTeamMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProfilesConnectedOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUsersByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserInfoByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUsertoactivateOperationCompleted;
        
        private System.Threading.SendOrPostCallback changePaymentStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserAccountInfoByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserCountByMonthOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserCountByAccTypeMonthOperationCompleted;
        
        private System.Threading.SendOrPostCallback PaidUserCountByMonthOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnPaidUserCountByMonthOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateForgetPasswordKeyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public User() {
            this.Url = global::Socioboard.Properties.Settings.Default.Socioboard_Api_User_User;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event RegisterCompletedEventHandler RegisterCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event AddTeamMembersCompletedEventHandler AddTeamMembersCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event ProfilesConnectedCompletedEventHandler ProfilesConnectedCompleted;
        
        /// <remarks/>
        public event getUsersByIdCompletedEventHandler getUsersByIdCompleted;
        
        /// <remarks/>
        public event getUserInfoByEmailCompletedEventHandler getUserInfoByEmailCompleted;
        
        /// <remarks/>
        public event ResetPasswordCompletedEventHandler ResetPasswordCompleted;
        
        /// <remarks/>
        public event UpdateUsertoactivateCompletedEventHandler UpdateUsertoactivateCompleted;
        
        /// <remarks/>
        public event changePaymentStatusCompletedEventHandler changePaymentStatusCompleted;
        
        /// <remarks/>
        public event UpdateUserAccountInfoByUserIdCompletedEventHandler UpdateUserAccountInfoByUserIdCompleted;
        
        /// <remarks/>
        public event UserCountByMonthCompletedEventHandler UserCountByMonthCompleted;
        
        /// <remarks/>
        public event UserCountByAccTypeMonthCompletedEventHandler UserCountByAccTypeMonthCompleted;
        
        /// <remarks/>
        public event PaidUserCountByMonthCompletedEventHandler PaidUserCountByMonthCompleted;
        
        /// <remarks/>
        public event UnPaidUserCountByMonthCompletedEventHandler UnPaidUserCountByMonthCompleted;
        
        /// <remarks/>
        public event UpdateForgetPasswordKeyCompletedEventHandler UpdateForgetPasswordKeyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string EmailId, string Password) {
            object[] results = this.Invoke("Login", new object[] {
                        EmailId,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string EmailId, string Password) {
            this.LoginAsync(EmailId, Password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string EmailId, string Password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        EmailId,
                        Password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Pass Username", RequestElementName="Pass Username", RequestNamespace="http://tempuri.org/", ResponseElementName="Pass UsernameResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Pass UsernameResult")]
        public string Register(string EmailId, string Password, string AccountType, string Username, string ActivationStatus) {
            object[] results = this.Invoke("Register", new object[] {
                        EmailId,
                        Password,
                        AccountType,
                        Username,
                        ActivationStatus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterAsync(string EmailId, string Password, string AccountType, string Username, string ActivationStatus) {
            this.RegisterAsync(EmailId, Password, AccountType, Username, ActivationStatus, null);
        }
        
        /// <remarks/>
        public void RegisterAsync(string EmailId, string Password, string AccountType, string Username, string ActivationStatus, object userState) {
            if ((this.RegisterOperationCompleted == null)) {
                this.RegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterOperationCompleted);
            }
            this.InvokeAsync("Register", new object[] {
                        EmailId,
                        Password,
                        AccountType,
                        Username,
                        ActivationStatus}, this.RegisterOperationCompleted, userState);
        }
        
        private void OnRegisterOperationCompleted(object arg) {
            if ((this.RegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateUser(string UserId, string fname, string lname, string timezone) {
            object[] results = this.Invoke("UpdateUser", new object[] {
                        UserId,
                        fname,
                        lname,
                        timezone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAsync(string UserId, string fname, string lname, string timezone) {
            this.UpdateUserAsync(UserId, fname, lname, timezone, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(string UserId, string fname, string lname, string timezone, object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        UserId,
                        fname,
                        lname,
                        timezone}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddTeamMembers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddTeamMembers(string groupid, string teamid) {
            this.Invoke("AddTeamMembers", new object[] {
                        groupid,
                        teamid});
        }
        
        /// <remarks/>
        public void AddTeamMembersAsync(string groupid, string teamid) {
            this.AddTeamMembersAsync(groupid, teamid, null);
        }
        
        /// <remarks/>
        public void AddTeamMembersAsync(string groupid, string teamid, object userState) {
            if ((this.AddTeamMembersOperationCompleted == null)) {
                this.AddTeamMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTeamMembersOperationCompleted);
            }
            this.InvokeAsync("AddTeamMembers", new object[] {
                        groupid,
                        teamid}, this.AddTeamMembersOperationCompleted, userState);
        }
        
        private void OnAddTeamMembersOperationCompleted(object arg) {
            if ((this.AddTeamMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTeamMembersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChangePassword(string EmailId, string Password, string NewPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        EmailId,
                        Password,
                        NewPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string EmailId, string Password, string NewPassword) {
            this.ChangePasswordAsync(EmailId, Password, NewPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string EmailId, string Password, string NewPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        EmailId,
                        Password,
                        NewPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProfilesConnected", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProfilesConnected(string UserId) {
            object[] results = this.Invoke("ProfilesConnected", new object[] {
                        UserId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProfilesConnectedAsync(string UserId) {
            this.ProfilesConnectedAsync(UserId, null);
        }
        
        /// <remarks/>
        public void ProfilesConnectedAsync(string UserId, object userState) {
            if ((this.ProfilesConnectedOperationCompleted == null)) {
                this.ProfilesConnectedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProfilesConnectedOperationCompleted);
            }
            this.InvokeAsync("ProfilesConnected", new object[] {
                        UserId}, this.ProfilesConnectedOperationCompleted, userState);
        }
        
        private void OnProfilesConnectedOperationCompleted(object arg) {
            if ((this.ProfilesConnectedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProfilesConnectedCompleted(this, new ProfilesConnectedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUsersById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUsersById(string UserId) {
            object[] results = this.Invoke("getUsersById", new object[] {
                        UserId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUsersByIdAsync(string UserId) {
            this.getUsersByIdAsync(UserId, null);
        }
        
        /// <remarks/>
        public void getUsersByIdAsync(string UserId, object userState) {
            if ((this.getUsersByIdOperationCompleted == null)) {
                this.getUsersByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsersByIdOperationCompleted);
            }
            this.InvokeAsync("getUsersById", new object[] {
                        UserId}, this.getUsersByIdOperationCompleted, userState);
        }
        
        private void OngetUsersByIdOperationCompleted(object arg) {
            if ((this.getUsersByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsersByIdCompleted(this, new getUsersByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserInfoByEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUserInfoByEmail(string userEmail) {
            object[] results = this.Invoke("getUserInfoByEmail", new object[] {
                        userEmail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserInfoByEmailAsync(string userEmail) {
            this.getUserInfoByEmailAsync(userEmail, null);
        }
        
        /// <remarks/>
        public void getUserInfoByEmailAsync(string userEmail, object userState) {
            if ((this.getUserInfoByEmailOperationCompleted == null)) {
                this.getUserInfoByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserInfoByEmailOperationCompleted);
            }
            this.InvokeAsync("getUserInfoByEmail", new object[] {
                        userEmail}, this.getUserInfoByEmailOperationCompleted, userState);
        }
        
        private void OngetUserInfoByEmailOperationCompleted(object arg) {
            if ((this.getUserInfoByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserInfoByEmailCompleted(this, new getUserInfoByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResetPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ResetPassword(System.Guid id, string password) {
            object[] results = this.Invoke("ResetPassword", new object[] {
                        id,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(System.Guid id, string password) {
            this.ResetPasswordAsync(id, password, null);
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(System.Guid id, string password, object userState) {
            if ((this.ResetPasswordOperationCompleted == null)) {
                this.ResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("ResetPassword", new object[] {
                        id,
                        password}, this.ResetPasswordOperationCompleted, userState);
        }
        
        private void OnResetPasswordOperationCompleted(object arg) {
            if ((this.ResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUsertoactivate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateUsertoactivate(string UserId, string ActivationStatus) {
            object[] results = this.Invoke("UpdateUsertoactivate", new object[] {
                        UserId,
                        ActivationStatus});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUsertoactivateAsync(string UserId, string ActivationStatus) {
            this.UpdateUsertoactivateAsync(UserId, ActivationStatus, null);
        }
        
        /// <remarks/>
        public void UpdateUsertoactivateAsync(string UserId, string ActivationStatus, object userState) {
            if ((this.UpdateUsertoactivateOperationCompleted == null)) {
                this.UpdateUsertoactivateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUsertoactivateOperationCompleted);
            }
            this.InvokeAsync("UpdateUsertoactivate", new object[] {
                        UserId,
                        ActivationStatus}, this.UpdateUsertoactivateOperationCompleted, userState);
        }
        
        private void OnUpdateUsertoactivateOperationCompleted(object arg) {
            if ((this.UpdateUsertoactivateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUsertoactivateCompleted(this, new UpdateUsertoactivateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/changePaymentStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string changePaymentStatus(string UserId, string ActivationStatus) {
            object[] results = this.Invoke("changePaymentStatus", new object[] {
                        UserId,
                        ActivationStatus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void changePaymentStatusAsync(string UserId, string ActivationStatus) {
            this.changePaymentStatusAsync(UserId, ActivationStatus, null);
        }
        
        /// <remarks/>
        public void changePaymentStatusAsync(string UserId, string ActivationStatus, object userState) {
            if ((this.changePaymentStatusOperationCompleted == null)) {
                this.changePaymentStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePaymentStatusOperationCompleted);
            }
            this.InvokeAsync("changePaymentStatus", new object[] {
                        UserId,
                        ActivationStatus}, this.changePaymentStatusOperationCompleted, userState);
        }
        
        private void OnchangePaymentStatusOperationCompleted(object arg) {
            if ((this.changePaymentStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePaymentStatusCompleted(this, new changePaymentStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserAccountInfoByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateUserAccountInfoByUserId(string userid, string AccountType, System.DateTime ExpiryDate, string PaymentStatus) {
            object[] results = this.Invoke("UpdateUserAccountInfoByUserId", new object[] {
                        userid,
                        AccountType,
                        ExpiryDate,
                        PaymentStatus});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAccountInfoByUserIdAsync(string userid, string AccountType, System.DateTime ExpiryDate, string PaymentStatus) {
            this.UpdateUserAccountInfoByUserIdAsync(userid, AccountType, ExpiryDate, PaymentStatus, null);
        }
        
        /// <remarks/>
        public void UpdateUserAccountInfoByUserIdAsync(string userid, string AccountType, System.DateTime ExpiryDate, string PaymentStatus, object userState) {
            if ((this.UpdateUserAccountInfoByUserIdOperationCompleted == null)) {
                this.UpdateUserAccountInfoByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserAccountInfoByUserIdOperationCompleted);
            }
            this.InvokeAsync("UpdateUserAccountInfoByUserId", new object[] {
                        userid,
                        AccountType,
                        ExpiryDate,
                        PaymentStatus}, this.UpdateUserAccountInfoByUserIdOperationCompleted, userState);
        }
        
        private void OnUpdateUserAccountInfoByUserIdOperationCompleted(object arg) {
            if ((this.UpdateUserAccountInfoByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserAccountInfoByUserIdCompleted(this, new UpdateUserAccountInfoByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserCountByMonth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UserCountByMonth() {
            object[] results = this.Invoke("UserCountByMonth", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UserCountByMonthAsync() {
            this.UserCountByMonthAsync(null);
        }
        
        /// <remarks/>
        public void UserCountByMonthAsync(object userState) {
            if ((this.UserCountByMonthOperationCompleted == null)) {
                this.UserCountByMonthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserCountByMonthOperationCompleted);
            }
            this.InvokeAsync("UserCountByMonth", new object[0], this.UserCountByMonthOperationCompleted, userState);
        }
        
        private void OnUserCountByMonthOperationCompleted(object arg) {
            if ((this.UserCountByMonthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserCountByMonthCompleted(this, new UserCountByMonthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserCountByAccTypeMonth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UserCountByAccTypeMonth() {
            object[] results = this.Invoke("UserCountByAccTypeMonth", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UserCountByAccTypeMonthAsync() {
            this.UserCountByAccTypeMonthAsync(null);
        }
        
        /// <remarks/>
        public void UserCountByAccTypeMonthAsync(object userState) {
            if ((this.UserCountByAccTypeMonthOperationCompleted == null)) {
                this.UserCountByAccTypeMonthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserCountByAccTypeMonthOperationCompleted);
            }
            this.InvokeAsync("UserCountByAccTypeMonth", new object[0], this.UserCountByAccTypeMonthOperationCompleted, userState);
        }
        
        private void OnUserCountByAccTypeMonthOperationCompleted(object arg) {
            if ((this.UserCountByAccTypeMonthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserCountByAccTypeMonthCompleted(this, new UserCountByAccTypeMonthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PaidUserCountByMonth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PaidUserCountByMonth() {
            object[] results = this.Invoke("PaidUserCountByMonth", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PaidUserCountByMonthAsync() {
            this.PaidUserCountByMonthAsync(null);
        }
        
        /// <remarks/>
        public void PaidUserCountByMonthAsync(object userState) {
            if ((this.PaidUserCountByMonthOperationCompleted == null)) {
                this.PaidUserCountByMonthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPaidUserCountByMonthOperationCompleted);
            }
            this.InvokeAsync("PaidUserCountByMonth", new object[0], this.PaidUserCountByMonthOperationCompleted, userState);
        }
        
        private void OnPaidUserCountByMonthOperationCompleted(object arg) {
            if ((this.PaidUserCountByMonthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PaidUserCountByMonthCompleted(this, new PaidUserCountByMonthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UnPaidUserCountByMonth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UnPaidUserCountByMonth() {
            object[] results = this.Invoke("UnPaidUserCountByMonth", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnPaidUserCountByMonthAsync() {
            this.UnPaidUserCountByMonthAsync(null);
        }
        
        /// <remarks/>
        public void UnPaidUserCountByMonthAsync(object userState) {
            if ((this.UnPaidUserCountByMonthOperationCompleted == null)) {
                this.UnPaidUserCountByMonthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnPaidUserCountByMonthOperationCompleted);
            }
            this.InvokeAsync("UnPaidUserCountByMonth", new object[0], this.UnPaidUserCountByMonthOperationCompleted, userState);
        }
        
        private void OnUnPaidUserCountByMonthOperationCompleted(object arg) {
            if ((this.UnPaidUserCountByMonthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnPaidUserCountByMonthCompleted(this, new UnPaidUserCountByMonthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateForgetPasswordKey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateForgetPasswordKey(string userID, string ForgetPasswordKey) {
            object[] results = this.Invoke("UpdateForgetPasswordKey", new object[] {
                        userID,
                        ForgetPasswordKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateForgetPasswordKeyAsync(string userID, string ForgetPasswordKey) {
            this.UpdateForgetPasswordKeyAsync(userID, ForgetPasswordKey, null);
        }
        
        /// <remarks/>
        public void UpdateForgetPasswordKeyAsync(string userID, string ForgetPasswordKey, object userState) {
            if ((this.UpdateForgetPasswordKeyOperationCompleted == null)) {
                this.UpdateForgetPasswordKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateForgetPasswordKeyOperationCompleted);
            }
            this.InvokeAsync("UpdateForgetPasswordKey", new object[] {
                        userID,
                        ForgetPasswordKey}, this.UpdateForgetPasswordKeyOperationCompleted, userState);
        }
        
        private void OnUpdateForgetPasswordKeyOperationCompleted(object arg) {
            if ((this.UpdateForgetPasswordKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateForgetPasswordKeyCompleted(this, new UpdateForgetPasswordKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RegisterCompletedEventHandler(object sender, RegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateUserCompletedEventHandler(object sender, UpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddTeamMembersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ProfilesConnectedCompletedEventHandler(object sender, ProfilesConnectedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProfilesConnectedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProfilesConnectedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getUsersByIdCompletedEventHandler(object sender, getUsersByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsersByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUsersByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getUserInfoByEmailCompletedEventHandler(object sender, getUserInfoByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserInfoByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserInfoByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ResetPasswordCompletedEventHandler(object sender, ResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateUsertoactivateCompletedEventHandler(object sender, UpdateUsertoactivateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUsertoactivateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUsertoactivateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void changePaymentStatusCompletedEventHandler(object sender, changePaymentStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changePaymentStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changePaymentStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateUserAccountInfoByUserIdCompletedEventHandler(object sender, UpdateUserAccountInfoByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserAccountInfoByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserAccountInfoByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UserCountByMonthCompletedEventHandler(object sender, UserCountByMonthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserCountByMonthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserCountByMonthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UserCountByAccTypeMonthCompletedEventHandler(object sender, UserCountByAccTypeMonthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserCountByAccTypeMonthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserCountByAccTypeMonthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void PaidUserCountByMonthCompletedEventHandler(object sender, PaidUserCountByMonthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PaidUserCountByMonthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PaidUserCountByMonthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UnPaidUserCountByMonthCompletedEventHandler(object sender, UnPaidUserCountByMonthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnPaidUserCountByMonthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnPaidUserCountByMonthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateForgetPasswordKeyCompletedEventHandler(object sender, UpdateForgetPasswordKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateForgetPasswordKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateForgetPasswordKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591