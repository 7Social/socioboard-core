@using Domain.Socioboard.Domain;
@{
    string path = @System.Configuration.ConfigurationManager.AppSettings["domain"];
    string status = "Pending";
    string senttoname = string.Empty;
    string sendtoprofileimage = string.Empty;
    string scheduleddate = string.Empty;
    Domain.Socioboard.Domain.User objuser = (Domain.Socioboard.Domain.User)Session["User"];
    Socioboard.Api.Groups.Groups ApiobjGroups = new Socioboard.Api.Groups.Groups();
    Domain.Socioboard.Domain.Groups objGroups = (Domain.Socioboard.Domain.Groups)(new System.Web.Script.Serialization.JavaScriptSerializer().Deserialize(ApiobjGroups.GetGroupDetailsByGroupId(Session["group"].ToString()), typeof(Domain.Socioboard.Domain.Groups)));
    FacebookAccount objFacebookAccount = new FacebookAccount();
    TwitterAccount objTwitterAccount = new TwitterAccount();
    LinkedInAccount objLinkedInAccount = new LinkedInAccount();
    InstagramAccount objInstagramAccount = new InstagramAccount();
    TumblrAccount objTumblrAccount = new TumblrAccount();
    
}



    <thead>
        <tr>
            <th>Send From</th>
            <th>Message</th>
            <th>Network</th>
            <th>Status</th>
            <th>Delete</th>
            <th>Edit</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in (List<Domain.Socioboard.Domain.ScheduledMessage>)Model)
        {
            objGroups = (Domain.Socioboard.Domain.Groups)(new System.Web.Script.Serialization.JavaScriptSerializer().Deserialize(ApiobjGroups.GetGroupDetailsByGroupId(Session["group"].ToString()), typeof(Domain.Socioboard.Domain.Groups)));
            if (item.ProfileType == "facebook")
            {
                Socioboard.Api.FacebookAccount.FacebookAccount ApiobjFacebookAccount = new Socioboard.Api.FacebookAccount.FacebookAccount();
                objFacebookAccount = (FacebookAccount)(new System.Web.Script.Serialization.JavaScriptSerializer().Deserialize(ApiobjFacebookAccount.getFacebookAccountDetailsById(objGroups.UserId.ToString(), item.ProfileId.ToString()), typeof(FacebookAccount)));
                senttoname = objFacebookAccount.FbUserName;
                sendtoprofileimage = "http://graph.facebook.com/" + objFacebookAccount.FbUserId + "/picture?type=small";
           
            }
            else if (item.ProfileType == "twitter")
            {
                Socioboard.Api.TwitterAccount.TwitterAccount ApiobjTwitterAccount = new Socioboard.Api.TwitterAccount.TwitterAccount();
                objTwitterAccount = (TwitterAccount)(new System.Web.Script.Serialization.JavaScriptSerializer().Deserialize(ApiobjTwitterAccount.GetTwitterAccountDetailsById(objGroups.UserId.ToString(), item.ProfileId.ToString()), typeof(TwitterAccount)));
                senttoname = objTwitterAccount.TwitterScreenName;
                sendtoprofileimage = objTwitterAccount.ProfileImageUrl;
            }
            else if (item.ProfileType == "linkedin")
            {
                Socioboard.Api.LinkedinAccount.LinkedinAccount ApiobjLinkedinAccount = new Socioboard.Api.LinkedinAccount.LinkedinAccount();
                objLinkedInAccount = (LinkedInAccount)(new System.Web.Script.Serialization.JavaScriptSerializer().Deserialize(ApiobjLinkedinAccount.GetLinkedinAccountDetailsById(objGroups.UserId.ToString(), item.ProfileId.ToString()), typeof(LinkedInAccount)));
                senttoname = objLinkedInAccount.LinkedinUserName;
                sendtoprofileimage = objLinkedInAccount.ProfileImageUrl;
            }
            else if (item.ProfileType == "instagram")
            {

            }
            else if (item.ProfileType == "tumblr")
            {
                Socioboard.Api.TumblrAccount.TumblrAccount ApiobjTumblrAccount = new Socioboard.Api.TumblrAccount.TumblrAccount();
                objTumblrAccount = (TumblrAccount)(new System.Web.Script.Serialization.JavaScriptSerializer().Deserialize(ApiobjTumblrAccount.GetTumblrAccountDetailsById(objGroups.UserId.ToString(), item.ProfileId.ToString()), typeof(TumblrAccount)));
                senttoname = objTumblrAccount.tblrUserName;
                sendtoprofileimage = "http://api.tumblr.com/v2/blog/" + objTumblrAccount.tblrUserName + ".tumblr.com/avatar";
            }
            else if (item.ProfileType == "youtube")
            {

            }
            <tr class="odd gradeX" id="@item.Id">
                <td>
                    <div class="col-xs-6">
                        <img src="@objuser.ProfileUrl" class="img-circle profilePic" data-toggle="modal" data-target="#profileModal">
                    </div>
                    <div class="col-xs-6">
                        <span>@objuser.UserName<br>
                            @item.ScheduleTime</span>
                    </div>
                </td>
                <td>@item.ShareMessage</td>
                <td>
                    <img src="@sendtoprofileimage" class="img-circle profilePic" data-toggle="modal" data-target="#profileModal">

                    @if (item.Status == true)
                    {
                        status = "Completed";
                    }
                    <span>@senttoname</span></td>
                <td class="center">@status</td>
                <td class="center">
                    <button type="button" class="btn btn-danger btn-circle" onclick="deletesocialqueuemsg('@item.Id')" ><i class="fa fa-times"></i></button>
                </td>
                <td>
                    <button type="button" class="btn btn-warning btn-circle" onclick="editsocialqueuemsg('@item.Id','@item.ShareMessage')"><i class="fa fa-pencil"></i></button>
                </td>
            </tr>
        }

    </tbody>

