@using Domain.Socioboard.Domain;
@{
    string path = @System.Configuration.ConfigurationManager.AppSettings["domain"];
    string status = "Pending";
    string ProfileUrl = string.Empty;
    string senttoname = string.Empty;
    string sendtoprofileimage = string.Empty;
    string scheduleddate = string.Empty;
    Domain.Socioboard.Domain.User objuser = (Domain.Socioboard.Domain.User)Session["User"];
    Socioboard.Api.Groups.Groups ApiobjGroups = new Socioboard.Api.Groups.Groups();
    Domain.Socioboard.Domain.Groups objGroups = (Domain.Socioboard.Domain.Groups)(new System.Web.Script.Serialization.JavaScriptSerializer().Deserialize(ApiobjGroups.GetGroupDetailsByGroupId(Session["group"].ToString()), typeof(Domain.Socioboard.Domain.Groups)));
    FacebookAccount objFacebookAccount = new FacebookAccount();
    TwitterAccount objTwitterAccount = new TwitterAccount();
    LinkedInAccount objLinkedInAccount = new LinkedInAccount();
    InstagramAccount objInstagramAccount = new InstagramAccount();
    TumblrAccount objTumblrAccount = new TumblrAccount();

    }
@if (!string.IsNullOrEmpty(objuser.ProfileUrl))
{
    try
    {
        string[] profileUrl = objuser.ProfileUrl.Split(new string[] { "Socialscoup" }, StringSplitOptions.None);
        string imgurl = "/Themes/Socialscoup" + profileUrl[2];
        //ProfileUrl = System.Text.RegularExpressions.Regex.Split(objuser.ProfileUrl, "wwwroot")[1];
        ProfileUrl = imgurl;
    }
    catch {
        ProfileUrl = objuser.ProfileUrl;
    }
}



    <thead>
        <tr>
            <th>Sent From</th>
            <th>Message</th>
            <th>Network</th>
            <th>Sent To</th>
            
        </tr>
    </thead>
    <tbody>
        @foreach (var item in (List<Domain.Socioboard.Domain.RssReader>)Model)
        {
            objGroups = (Domain.Socioboard.Domain.Groups)(new System.Web.Script.Serialization.JavaScriptSerializer().Deserialize(ApiobjGroups.GetGroupDetailsByGroupId(Session["group"].ToString()), typeof(Domain.Socioboard.Domain.Groups)));
            if (item.ProfileType == "facebook")
            {
                Socioboard.Api.FacebookAccount.FacebookAccount ApiobjFacebookAccount = new Socioboard.Api.FacebookAccount.FacebookAccount();
                objFacebookAccount = (FacebookAccount)(new System.Web.Script.Serialization.JavaScriptSerializer().Deserialize(ApiobjFacebookAccount.getFacebookAccountDetailsById(objGroups.UserId.ToString(), item.ProfileId.ToString()), typeof(FacebookAccount)));
                senttoname = objFacebookAccount.FbUserName;
                sendtoprofileimage = "http://graph.facebook.com/" + objFacebookAccount.FbUserId + "/picture?type=small";
                if (string.IsNullOrEmpty(sendtoprofileimage))
                {
                    sendtoprofileimage = "/Themes/" + System.Configuration.ConfigurationManager.AppSettings["domain"] + "/Contents/img/blank_img.png";
                }
           
            }
            else if (item.ProfileType == "twitter")
            {
                Socioboard.Api.TwitterAccount.TwitterAccount ApiobjTwitterAccount = new Socioboard.Api.TwitterAccount.TwitterAccount();
                objTwitterAccount = (TwitterAccount)(new System.Web.Script.Serialization.JavaScriptSerializer().Deserialize(ApiobjTwitterAccount.GetTwitterAccountDetailsById(objGroups.UserId.ToString(), item.ProfileId.ToString()), typeof(TwitterAccount)));
                senttoname = objTwitterAccount.TwitterScreenName;
                sendtoprofileimage = objTwitterAccount.ProfileImageUrl;
                if (string.IsNullOrEmpty(sendtoprofileimage))
                {
                    sendtoprofileimage = "/Themes/" + System.Configuration.ConfigurationManager.AppSettings["domain"] + "/Contents/img/blank_img.png";
                }
            }
            else if (item.ProfileType == "linkedin")
            {
                Socioboard.Api.LinkedinAccount.LinkedinAccount ApiobjLinkedinAccount = new Socioboard.Api.LinkedinAccount.LinkedinAccount();
                objLinkedInAccount = (LinkedInAccount)(new System.Web.Script.Serialization.JavaScriptSerializer().Deserialize(ApiobjLinkedinAccount.GetLinkedinAccountDetailsById(objGroups.UserId.ToString(), item.ProfileId.ToString()), typeof(LinkedInAccount)));
                senttoname = objLinkedInAccount.LinkedinUserName;
                sendtoprofileimage = objLinkedInAccount.ProfileImageUrl;
                if (string.IsNullOrEmpty(sendtoprofileimage))
                {
                    sendtoprofileimage = "/Themes/" + System.Configuration.ConfigurationManager.AppSettings["domain"] + "/Contents/img/blank_img.png";
                }
            }
            else if (item.ProfileType == "instagram")
            {

            }
            else if (item.ProfileType == "tumblr")
            {
                Socioboard.Api.TumblrAccount.TumblrAccount ApiobjTumblrAccount = new Socioboard.Api.TumblrAccount.TumblrAccount();
                objTumblrAccount = (TumblrAccount)(new System.Web.Script.Serialization.JavaScriptSerializer().Deserialize(ApiobjTumblrAccount.GetTumblrAccountDetailsById(objGroups.UserId.ToString(), item.ProfileId.ToString()), typeof(TumblrAccount)));
                senttoname = objTumblrAccount.tblrUserName;
                sendtoprofileimage = "http://api.tumblr.com/v2/blog/" + objTumblrAccount.tblrUserName + ".tumblr.com/avatar";
                if (string.IsNullOrEmpty(sendtoprofileimage))
                {
                    sendtoprofileimage = "/Themes/" + System.Configuration.ConfigurationManager.AppSettings["domain"] + "/Contents/img/blank_img.png";
                }
            }
            else if (item.ProfileType == "youtube")
            {

            }
            <tr class="odd gradeX" id="@item.Id">
                <td>
                    <div class="col-xs-6">
                        @if (ProfileUrl==null || ProfileUrl=="")
                        {
                           
                            <img src="/Themes/@path/Contents/img/anonymousUser.jpg" class="img-circle profilePic" onclick="DetailsofProfile('@item.ProfileId','@item.ProfileType')">
                        }
                        else
                        {
                             if (!string.IsNullOrEmpty(ProfileUrl))
                       {
                           string[] profileUrl = ProfileUrl.Split(new string[] { "Socialscoup" }, StringSplitOptions.None);
                           string imgurl = "/Themes/Socialscoup" + profileUrl[2];
                        <img src="@imgurl" class="img-circle profilePic" onclick="DetailsofProfile('@item.ProfileId','@item.ProfileType')">
                        }
                        }
                            </div>
                    <div class="col-xs-6">
                        <span>@objuser.UserName<br></span>
                           
                    </div>
                </td>
                <td>@item.Description</td>
                <td>
                    <img src="@sendtoprofileimage" class="img-circle profilePic" onclick="DetailsofProfile('@item.ProfileId','@item.ProfileType')">

                    @if (item.Status == true)
                    {
                        status = "Completed";
                    }
                    <span>@item.ProfileType</span></td>
              <td class="center">@senttoname</td>
               @* <td class="center">
                    <button type="button" class="btn btn-danger btn-circle" onclick="deletesocialqueuemsg('@item.Id')" ><i class="fa fa-times"></i></button>
                </td>*@
               @* <td>
                    <button type="button" class="btn btn-warning btn-circle" onclick="editsocialqueuemsg('@item.Id','@item.ShareMessage')"><i class="fa fa-pencil"></i></button>
                </td>*@
            </tr>
        }

    </tbody>
